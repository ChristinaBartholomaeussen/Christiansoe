@page "/attractions"
@using christiansoe.Data.services
@using christiansoe.Data.models
@inject IAttractionService _attractionService;

<div class="my-container">
    <img src="images/a-Christian havn luftfoto-min.jpg"/>
    <div class="centered">
        <h1>Attraktioner</h1>
    </div>
</div>

<div class="container">

    <div class="row">

        @if (_attractions == null)
        {
            <p>Bla bla bla</p>
        }
        else
        {
            @foreach (var attraction in _attractions)
            {
                var attractionLink = ReplaceChars(attraction.Name);

                <div class="col-3">
                    <div class="attractionList">
                        <a href="/@attractionLink">@attraction.Name</a>
                    </div>
                </div>
            }
        }
    </div>
</div>


@code {

    private List<Attraction> _attractions;


    protected override async Task OnInitializedAsync()
    {
        _attractions = await _attractionService.GetAttraction();
    }
    


    private readonly Dictionary<string, string> _replacementMap = new()
    {
        {"æ", "ea"},
        {"ø", "oe"},
        {"å", "aa"}
    };

    private string ReplaceChars(string stringToEncode)
    {
        var replacedString = stringToEncode;

        foreach (var danishLetter in _replacementMap.Keys)
        {
            replacedString = replacedString.Replace(danishLetter, _replacementMap[danishLetter]);
        }

        var stringToReturn = replacedString.Split(" ");
        var newString = "";
        foreach (var letter in stringToReturn)
        {
            newString = newString + letter;
        }

        return newString.ToLower();
    }





}