@page "/attractions"
@using christiansoe.Data.services
@using christiansoe.Data.models
@inject IAttractionService _attractionService;

<div class="container">
    
    <div class="row my-5">

        @if (_attractions == null)
        {
            <div class="col my-5 d-flex justify-content-center">
               <div class="loader"></div> 
            </div>
        }
        else
        {
            @foreach (Attraction attraction in _attractions.Skip(1))
            {
                string attractionLink = ReplaceChars(attraction.Name);
                
                    <div class="card my-3">
                        <div class="card-body">
                            <h3 class="card-title">
                                <a href="/@attractionLink">@attraction.Name <i class="bi bi-info-square" style="float: right"></i></a>
                            </h3>
                        </div>
                    </div>
            }
        }
    </div>
</div>


@code {

    private List<Attraction> _attractions;
    
    protected override async Task OnInitializedAsync()
    {
        _attractions = await _attractionService.GetAttractions();
        //_attractions = null;
    }

    private readonly Dictionary<string, string> _replacementMap = new()
    {
        {"æ", "ea"},
        {"ø", "oe"},
        {"å", "aa"}
    };

    private string ReplaceChars(string stringToEncode)
    {
        string replacedString = stringToEncode;

        foreach (string danishLetter in _replacementMap.Keys)
        {
            replacedString = replacedString.Replace(danishLetter, _replacementMap[danishLetter]);
        }

        string[] stringToReturn = replacedString.Split(" ");
        string newString = "";
        foreach (string letter in stringToReturn)
        {
            newString += letter;
        }

        return newString.ToLower();
    }
    
}